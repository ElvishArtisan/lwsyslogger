; lwsyslogger.conf
;
; This is the master configuration file for lwsyslogger(8).
;

[Global]
Id=Default

;
; Name of the user account that will own the log files. The last value found
; is used.
;
ServiceUser=lwsyslogger

;
; Name of the group account that will own the log files. The last value found
; is used.
;
ServiceGroup=lwsyslogger

;
; The location under which all log files will be saved. The last value found
; is used.
;
LogRoot=/var/log/lwsyslogger

[Receiver]
Id=Default
;
; Type of receiver. The last value found is used.
;
Type=UDP

;
; UDP Port to listen on. The last value found is used.
;
Port=514

;
; Processor. One or more ID string(s) of processor(s) to send received
; messages to.
;
Processor=Default


[Processor]
Id=Default

;
; Type of Processor. The last value found is used.
;
Type=SimpleFile

;
; The path/filename (relative to LogRoot) to write logs to. The last value
; found is used.
;
BaseFilename=mydir/syslog

;
; The format of the line logged for each message. The last value found is used.
;
Template=%t %h %m

;
; The syslog facility type(s) to log. Takes a comma-separated list. Multiple
; values found are concaternated into a single list. Prepending a '-' to
; a facility value will cause it to be removed from the set of facility types
; to be logged.
;
Facility=SYSLOG,USER

;
; The syslog severity level(s) to log. Takes a comma separated list. Multiple
; values found are concaternated into a single list. Appending a '+' to
; a severity level will cause messages with that level, plus all higher
; severity levels to be processed.
;
Severity=DEBUG+

;
; Process messages whose immediate upstream origination address falls into
; one of the specified subnets, specified in CIDR notation. Takes a comma
; separated list. Multiple values found are concaternated into a single list.
;
UpstreamAddress=::/0
UpstreamAddress=0.0.0.0/0

;
; Run the log rotation at this time each day. The last value found is used.
; If left undefined, then all log rotation will be disabled.
;
LogRotationTime=00:00

;
; Rotate the current log if it is >= this many bytes. The last value found
; is used. If left undefined, then no log rotation on the basis of log file
; size will be performed.
;
LogRotationSize=1000000

;
; Rotate current log if it is >= this many days old. The last value found
; is used. If left undefined, then no log rotation on the basis of log file
; age will be performed.
;
LogRotationAge=30

;
; Purge old logs if they are older than this many days. The last value found
; is used. If left undefined, then no log purging will be performed.
;       
OldLogPurgeAge=60
